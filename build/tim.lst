ARM GAS  /tmp/ccyt5Y2e.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_TIM2_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_TIM2_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_TIM2_Init:
  27              	.LFB130:
  28              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   * @attention
   8:Src/tim.c     ****   *
   9:Src/tim.c     ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/tim.c     ****   * All rights reserved.</center></h2>
  11:Src/tim.c     ****   *
  12:Src/tim.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/tim.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/tim.c     ****   * License. You may obtain a copy of the License at:
  15:Src/tim.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/tim.c     ****   *
  17:Src/tim.c     ****   ******************************************************************************
  18:Src/tim.c     ****   */
  19:Src/tim.c     **** 
  20:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/tim.c     **** #include "tim.h"
  22:Src/tim.c     **** 
  23:Src/tim.c     **** /* USER CODE BEGIN 0 */
  24:Src/tim.c     **** 
  25:Src/tim.c     **** /* USER CODE END 0 */
  26:Src/tim.c     **** 
  27:Src/tim.c     **** TIM_HandleTypeDef htim2;
  28:Src/tim.c     **** 
  29:Src/tim.c     **** /* TIM2 init function */
  30:Src/tim.c     **** void MX_TIM2_Init(void)
ARM GAS  /tmp/ccyt5Y2e.s 			page 2


  31:Src/tim.c     **** {
  29              		.loc 1 31 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 56
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 8FB0     		sub	sp, sp, #60
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 64
  32:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  40              		.loc 1 32 3 view .LVU1
  41              		.loc 1 32 26 is_stmt 0 view .LVU2
  42 0004 0023     		movs	r3, #0
  43 0006 0A93     		str	r3, [sp, #40]
  44 0008 0B93     		str	r3, [sp, #44]
  45 000a 0C93     		str	r3, [sp, #48]
  46 000c 0D93     		str	r3, [sp, #52]
  33:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  47              		.loc 1 33 3 is_stmt 1 view .LVU3
  48              		.loc 1 33 27 is_stmt 0 view .LVU4
  49 000e 0793     		str	r3, [sp, #28]
  50 0010 0893     		str	r3, [sp, #32]
  51 0012 0993     		str	r3, [sp, #36]
  34:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  52              		.loc 1 34 3 is_stmt 1 view .LVU5
  53              		.loc 1 34 22 is_stmt 0 view .LVU6
  54 0014 0093     		str	r3, [sp]
  55 0016 0193     		str	r3, [sp, #4]
  56 0018 0293     		str	r3, [sp, #8]
  57 001a 0393     		str	r3, [sp, #12]
  58 001c 0493     		str	r3, [sp, #16]
  59 001e 0593     		str	r3, [sp, #20]
  60 0020 0693     		str	r3, [sp, #24]
  35:Src/tim.c     **** 
  36:Src/tim.c     ****   htim2.Instance = TIM2;
  61              		.loc 1 36 3 is_stmt 1 view .LVU7
  62              		.loc 1 36 18 is_stmt 0 view .LVU8
  63 0022 2148     		ldr	r0, .L13
  64 0024 4FF08042 		mov	r2, #1073741824
  65 0028 0260     		str	r2, [r0]
  37:Src/tim.c     ****   htim2.Init.Prescaler = 10;
  66              		.loc 1 37 3 is_stmt 1 view .LVU9
  67              		.loc 1 37 24 is_stmt 0 view .LVU10
  68 002a 0A22     		movs	r2, #10
  69 002c 4260     		str	r2, [r0, #4]
  38:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  70              		.loc 1 38 3 is_stmt 1 view .LVU11
  71              		.loc 1 38 26 is_stmt 0 view .LVU12
  72 002e 8360     		str	r3, [r0, #8]
  39:Src/tim.c     ****   htim2.Init.Period = 1000;
  73              		.loc 1 39 3 is_stmt 1 view .LVU13
  74              		.loc 1 39 21 is_stmt 0 view .LVU14
  75 0030 4FF47A72 		mov	r2, #1000
  76 0034 C260     		str	r2, [r0, #12]
ARM GAS  /tmp/ccyt5Y2e.s 			page 3


  40:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  77              		.loc 1 40 3 is_stmt 1 view .LVU15
  78              		.loc 1 40 28 is_stmt 0 view .LVU16
  79 0036 0361     		str	r3, [r0, #16]
  41:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  80              		.loc 1 41 3 is_stmt 1 view .LVU17
  81              		.loc 1 41 32 is_stmt 0 view .LVU18
  82 0038 8361     		str	r3, [r0, #24]
  42:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  83              		.loc 1 42 3 is_stmt 1 view .LVU19
  84              		.loc 1 42 7 is_stmt 0 view .LVU20
  85 003a FFF7FEFF 		bl	HAL_TIM_Base_Init
  86              	.LVL0:
  87              		.loc 1 42 6 view .LVU21
  88 003e 18BB     		cbnz	r0, .L8
  89              	.L2:
  43:Src/tim.c     ****   {
  44:Src/tim.c     ****     Error_Handler();
  45:Src/tim.c     ****   }
  46:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  90              		.loc 1 46 3 is_stmt 1 view .LVU22
  91              		.loc 1 46 34 is_stmt 0 view .LVU23
  92 0040 4FF48053 		mov	r3, #4096
  93 0044 0A93     		str	r3, [sp, #40]
  47:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  94              		.loc 1 47 3 is_stmt 1 view .LVU24
  95              		.loc 1 47 7 is_stmt 0 view .LVU25
  96 0046 0AA9     		add	r1, sp, #40
  97 0048 1748     		ldr	r0, .L13
  98 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  99              	.LVL1:
 100              		.loc 1 47 6 view .LVU26
 101 004e F0B9     		cbnz	r0, .L9
 102              	.L3:
  48:Src/tim.c     ****   {
  49:Src/tim.c     ****     Error_Handler();
  50:Src/tim.c     ****   }
  51:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 103              		.loc 1 51 3 is_stmt 1 view .LVU27
 104              		.loc 1 51 7 is_stmt 0 view .LVU28
 105 0050 1548     		ldr	r0, .L13
 106 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 107              	.LVL2:
 108              		.loc 1 51 6 view .LVU29
 109 0056 E8B9     		cbnz	r0, .L10
 110              	.L4:
  52:Src/tim.c     ****   {
  53:Src/tim.c     ****     Error_Handler();
  54:Src/tim.c     ****   }
  55:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 111              		.loc 1 55 3 is_stmt 1 view .LVU30
 112              		.loc 1 55 37 is_stmt 0 view .LVU31
 113 0058 0023     		movs	r3, #0
 114 005a 0793     		str	r3, [sp, #28]
  56:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 115              		.loc 1 56 3 is_stmt 1 view .LVU32
 116              		.loc 1 56 33 is_stmt 0 view .LVU33
ARM GAS  /tmp/ccyt5Y2e.s 			page 4


 117 005c 0993     		str	r3, [sp, #36]
  57:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 118              		.loc 1 57 3 is_stmt 1 view .LVU34
 119              		.loc 1 57 7 is_stmt 0 view .LVU35
 120 005e 07A9     		add	r1, sp, #28
 121 0060 1148     		ldr	r0, .L13
 122 0062 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 123              	.LVL3:
 124              		.loc 1 57 6 view .LVU36
 125 0066 C0B9     		cbnz	r0, .L11
 126              	.L5:
  58:Src/tim.c     ****   {
  59:Src/tim.c     ****     Error_Handler();
  60:Src/tim.c     ****   }
  61:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 127              		.loc 1 61 3 is_stmt 1 view .LVU37
 128              		.loc 1 61 20 is_stmt 0 view .LVU38
 129 0068 6023     		movs	r3, #96
 130 006a 0093     		str	r3, [sp]
  62:Src/tim.c     ****   sConfigOC.Pulse = 500;
 131              		.loc 1 62 3 is_stmt 1 view .LVU39
 132              		.loc 1 62 19 is_stmt 0 view .LVU40
 133 006c 4FF4FA73 		mov	r3, #500
 134 0070 0193     		str	r3, [sp, #4]
  63:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 135              		.loc 1 63 3 is_stmt 1 view .LVU41
 136              		.loc 1 63 24 is_stmt 0 view .LVU42
 137 0072 0022     		movs	r2, #0
 138 0074 0292     		str	r2, [sp, #8]
  64:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 139              		.loc 1 64 3 is_stmt 1 view .LVU43
 140              		.loc 1 64 24 is_stmt 0 view .LVU44
 141 0076 0492     		str	r2, [sp, #16]
  65:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 142              		.loc 1 65 3 is_stmt 1 view .LVU45
 143              		.loc 1 65 7 is_stmt 0 view .LVU46
 144 0078 6946     		mov	r1, sp
 145 007a 0B48     		ldr	r0, .L13
 146 007c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 147              	.LVL4:
 148              		.loc 1 65 6 view .LVU47
 149 0080 70B9     		cbnz	r0, .L12
 150              	.L1:
  66:Src/tim.c     ****   {
  67:Src/tim.c     ****     Error_Handler();
  68:Src/tim.c     ****   }
  69:Src/tim.c     **** 
  70:Src/tim.c     **** }
 151              		.loc 1 70 1 view .LVU48
 152 0082 0FB0     		add	sp, sp, #60
 153              	.LCFI2:
 154              		.cfi_remember_state
 155              		.cfi_def_cfa_offset 4
 156              		@ sp needed
 157 0084 5DF804FB 		ldr	pc, [sp], #4
 158              	.L8:
 159              	.LCFI3:
ARM GAS  /tmp/ccyt5Y2e.s 			page 5


 160              		.cfi_restore_state
  44:Src/tim.c     ****   }
 161              		.loc 1 44 5 is_stmt 1 view .LVU49
 162 0088 FFF7FEFF 		bl	Error_Handler
 163              	.LVL5:
 164 008c D8E7     		b	.L2
 165              	.L9:
  49:Src/tim.c     ****   }
 166              		.loc 1 49 5 view .LVU50
 167 008e FFF7FEFF 		bl	Error_Handler
 168              	.LVL6:
 169 0092 DDE7     		b	.L3
 170              	.L10:
  53:Src/tim.c     ****   }
 171              		.loc 1 53 5 view .LVU51
 172 0094 FFF7FEFF 		bl	Error_Handler
 173              	.LVL7:
 174 0098 DEE7     		b	.L4
 175              	.L11:
  59:Src/tim.c     ****   }
 176              		.loc 1 59 5 view .LVU52
 177 009a FFF7FEFF 		bl	Error_Handler
 178              	.LVL8:
 179 009e E3E7     		b	.L5
 180              	.L12:
  67:Src/tim.c     ****   }
 181              		.loc 1 67 5 view .LVU53
 182 00a0 FFF7FEFF 		bl	Error_Handler
 183              	.LVL9:
 184              		.loc 1 70 1 is_stmt 0 view .LVU54
 185 00a4 EDE7     		b	.L1
 186              	.L14:
 187 00a6 00BF     		.align	2
 188              	.L13:
 189 00a8 00000000 		.word	.LANCHOR0
 190              		.cfi_endproc
 191              	.LFE130:
 193              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 194              		.align	1
 195              		.global	HAL_TIM_Base_MspInit
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 199              		.fpu fpv4-sp-d16
 201              	HAL_TIM_Base_MspInit:
 202              	.LVL10:
 203              	.LFB131:
  71:Src/tim.c     **** 
  72:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
  73:Src/tim.c     **** {
 204              		.loc 1 73 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 0, uses_anonymous_args = 0
  74:Src/tim.c     **** 
  75:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 208              		.loc 1 75 3 view .LVU56
ARM GAS  /tmp/ccyt5Y2e.s 			page 6


 209              		.loc 1 75 20 is_stmt 0 view .LVU57
 210 0000 0368     		ldr	r3, [r0]
 211              		.loc 1 75 5 view .LVU58
 212 0002 B3F1804F 		cmp	r3, #1073741824
 213 0006 00D0     		beq	.L21
 214 0008 7047     		bx	lr
 215              	.L21:
  73:Src/tim.c     **** 
 216              		.loc 1 73 1 view .LVU59
 217 000a 00B5     		push	{lr}
 218              	.LCFI4:
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 14, -4
 221 000c 83B0     		sub	sp, sp, #12
 222              	.LCFI5:
 223              		.cfi_def_cfa_offset 16
  76:Src/tim.c     ****   {
  77:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
  78:Src/tim.c     **** 
  79:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
  80:Src/tim.c     ****     /* TIM2 clock enable */
  81:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 224              		.loc 1 81 5 is_stmt 1 view .LVU60
 225              	.LBB2:
 226              		.loc 1 81 5 view .LVU61
 227              		.loc 1 81 5 view .LVU62
 228 000e 03F50433 		add	r3, r3, #135168
 229 0012 9A6D     		ldr	r2, [r3, #88]
 230 0014 42F00102 		orr	r2, r2, #1
 231 0018 9A65     		str	r2, [r3, #88]
 232              		.loc 1 81 5 view .LVU63
 233 001a 9B6D     		ldr	r3, [r3, #88]
 234 001c 03F00103 		and	r3, r3, #1
 235 0020 0193     		str	r3, [sp, #4]
 236              		.loc 1 81 5 view .LVU64
 237 0022 019B     		ldr	r3, [sp, #4]
 238              	.LBE2:
 239              		.loc 1 81 5 view .LVU65
  82:Src/tim.c     **** 
  83:Src/tim.c     ****     /* TIM2 interrupt Init */
  84:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 240              		.loc 1 84 5 view .LVU66
 241 0024 0022     		movs	r2, #0
 242 0026 1146     		mov	r1, r2
 243 0028 1C20     		movs	r0, #28
 244              	.LVL11:
 245              		.loc 1 84 5 is_stmt 0 view .LVU67
 246 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 247              	.LVL12:
  85:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 248              		.loc 1 85 5 is_stmt 1 view .LVU68
 249 002e 1C20     		movs	r0, #28
 250 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 251              	.LVL13:
  86:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
  87:Src/tim.c     **** 
  88:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
ARM GAS  /tmp/ccyt5Y2e.s 			page 7


  89:Src/tim.c     ****   }
  90:Src/tim.c     **** }
 252              		.loc 1 90 1 is_stmt 0 view .LVU69
 253 0034 03B0     		add	sp, sp, #12
 254              	.LCFI6:
 255              		.cfi_def_cfa_offset 4
 256              		@ sp needed
 257 0036 5DF804FB 		ldr	pc, [sp], #4
 258              		.cfi_endproc
 259              	.LFE131:
 261              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 262              		.align	1
 263              		.global	HAL_TIM_Base_MspDeInit
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv4-sp-d16
 269              	HAL_TIM_Base_MspDeInit:
 270              	.LVL14:
 271              	.LFB132:
  91:Src/tim.c     **** 
  92:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
  93:Src/tim.c     **** {
 272              		.loc 1 93 1 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		.loc 1 93 1 is_stmt 0 view .LVU71
 277 0000 08B5     		push	{r3, lr}
 278              	.LCFI7:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 3, -8
 281              		.cfi_offset 14, -4
  94:Src/tim.c     **** 
  95:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 282              		.loc 1 95 3 is_stmt 1 view .LVU72
 283              		.loc 1 95 20 is_stmt 0 view .LVU73
 284 0002 0368     		ldr	r3, [r0]
 285              		.loc 1 95 5 view .LVU74
 286 0004 B3F1804F 		cmp	r3, #1073741824
 287 0008 00D0     		beq	.L25
 288              	.LVL15:
 289              	.L22:
  96:Src/tim.c     ****   {
  97:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
  98:Src/tim.c     **** 
  99:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 100:Src/tim.c     ****     /* Peripheral clock disable */
 101:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 102:Src/tim.c     **** 
 103:Src/tim.c     ****     /* TIM2 interrupt Deinit */
 104:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 105:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 106:Src/tim.c     **** 
 107:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 108:Src/tim.c     ****   }
 109:Src/tim.c     **** } 
ARM GAS  /tmp/ccyt5Y2e.s 			page 8


 290              		.loc 1 109 1 view .LVU75
 291 000a 08BD     		pop	{r3, pc}
 292              	.LVL16:
 293              	.L25:
 101:Src/tim.c     **** 
 294              		.loc 1 101 5 is_stmt 1 view .LVU76
 295 000c 044A     		ldr	r2, .L26
 296 000e 936D     		ldr	r3, [r2, #88]
 297 0010 23F00103 		bic	r3, r3, #1
 298 0014 9365     		str	r3, [r2, #88]
 104:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 299              		.loc 1 104 5 view .LVU77
 300 0016 1C20     		movs	r0, #28
 301              	.LVL17:
 104:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 302              		.loc 1 104 5 is_stmt 0 view .LVU78
 303 0018 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 304              	.LVL18:
 305              		.loc 1 109 1 view .LVU79
 306 001c F5E7     		b	.L22
 307              	.L27:
 308 001e 00BF     		.align	2
 309              	.L26:
 310 0020 00100240 		.word	1073876992
 311              		.cfi_endproc
 312              	.LFE132:
 314              		.global	htim2
 315              		.section	.bss.htim2,"aw",%nobits
 316              		.align	2
 317              		.set	.LANCHOR0,. + 0
 320              	htim2:
 321 0000 00000000 		.space	64
 321      00000000 
 321      00000000 
 321      00000000 
 321      00000000 
 322              		.text
 323              	.Letext0:
 324              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 325              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 326              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 327              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 328              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 329              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 330              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 331              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 332              		.file 10 "Inc/main.h"
 333              		.file 11 "Inc/tim.h"
ARM GAS  /tmp/ccyt5Y2e.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccyt5Y2e.s:18     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccyt5Y2e.s:26     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccyt5Y2e.s:189    .text.MX_TIM2_Init:00000000000000a8 $d
     /tmp/ccyt5Y2e.s:194    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccyt5Y2e.s:201    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccyt5Y2e.s:262    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccyt5Y2e.s:269    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccyt5Y2e.s:310    .text.HAL_TIM_Base_MspDeInit:0000000000000020 $d
     /tmp/ccyt5Y2e.s:320    .bss.htim2:0000000000000000 htim2
     /tmp/ccyt5Y2e.s:316    .bss.htim2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
